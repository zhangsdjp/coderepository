AWSTemplateFormatVersion: 2010-09-09
Description: CodePipeline For superset data collector
# Stack name: sonarqube-cicd-stack
# AWS Developer Tools > Settings > Connections, create github connection at first.
# https://docs.aws.amazon.com/codepipeline/latest/userguide/connections-github.html
# https://qiita.com/hakoda_fumiko/items/e4db2ad5a1379c1f5ead
# ------------------------------------------------------------#
# Parameters
# ------------------------------------------------------------#
Parameters:
  Service:
    Type: String
    Default: sonarqube
  Env:
    Type: String
    Default: dev

  CodeCommitRepositorySettings:
    Type: String
    Default: sonarqube
  CodeCommitRepository:
    Type: String
    Default: sonarqube

  DeployStack:
    Type: String
    Default: sonarqube-ec2-stack
  PackagedTemplateFile:
    Type: String
    Default: cfn/sonarqube-ec2.yml
    Description: Build Output Template Filename    

  # github parameter
  GithubConnectionArn:
    Type: String
    Default: "arn:aws:codeconnections:ap-northeast-1:588322030717:connection/541c4914-e54f-4e26-a922-206cfcf02e93"
  GitHubRepo:
    Type: String
    Default: "zhangsdjp/coderepository"
  GitHubBranch:
    Type: String
    Default: main
  SourceActionName:
    Type: String
    Default: Github


# ------------------------------------------------------------#
# Resources
# ------------------------------------------------------------#
Resources:

  # CodeWatchEventを実行できるIAMRole
  CloudwatchEventRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub  ${Env}-${Service}-cloudwatch-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: CloudWatchEventsPipelineExecution
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: codepipeline:StartPipelineExecution
                Resource: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}

  # CodeBuild IAM Role
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${Env}-${Service}-codebuild-role
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
      # dev-superset-CodeBuildBasePolicy
        - PolicyName: !Sub  ${Env}-${Service}-CodeBuildBasePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${Env}-${Service}-codebuild-project
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${Env}-${Service}-codebuild-project:*
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${Env}-${Service}*
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${Env}-${Service}*:*
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
              - Effect: Allow
                Resource:
                  - !Sub 'arn:aws:s3:::${Env}-${Service}-s3-artifactbucket-${AWS::AccountId}*'
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
              - Effect: Allow
                Action:
                  - 'codebuild:CreateReportGroup'
                  - 'codebuild:CreateReport'
                  - 'codebuild:UpdateReport'
                  - 'codebuild:BatchPutTestCases'
                  - 'codebuild:BatchPutCodeCoverages'
                Resource:
                  - !Sub 'arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/${Env}-${Service}-*'
              - Effect: Allow
                Action:
                  - 'ssm:GetParameters'
                Resource:
                  - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*'
              - Effect: Allow
                Action:
                  - 'ecr:*'
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - 'batch:*'
                Resource:
                  - !Sub 'arn:aws:batch:${AWS::Region}:${AWS::AccountId}:job-definition/*'
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/ecsTaskExecRole


  # CodePipelineに適用するIAMRole
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${Env}-${Service}-codepipeline-role
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub  ${Env}-${Service}-AWSCodePipelineServiceRole-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - iam:PassRole
                Resource: '*'
                Effect: Allow
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - cloudformation.amazonaws.com
                      - elasticbeanstalk.amazonaws.com
                      - ec2.amazonaws.com
                      - ecs-tasks.amazonaws.com
              - Action:
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetRepository
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive                  
                Resource: '*'
                Effect: Allow
              - Action:
                  - codedeploy:CreateDeployment
                  - codedeploy:GetApplication
                  - codedeploy:GetApplicationRevision
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:RegisterApplicationRevision
                  - codedeploy:*
                Resource: '*'
                Effect: Allow
              - Action:
                  - codestar-connections:UseConnection
                Resource: '*'
                Effect: Allow
              - Action:
                  - elasticbeanstalk:*
                  - ec2:*
                  - elasticloadbalancing:*
                  - autoscaling:*
                  - cloudwatch:*"
                  - s3:*
                  - sns:*
                  - cloudformation:*
                  - rds:*
                  - sqs:*
                  - ecs:*                  
                Resource: '*'
                Effect: Allow
              - Action:
                  - lambda:InvokeFunction
                  - lambda:ListFunctions
                Resource: '*'
                Effect: Allow
              - Action:
                  - opsworks:CreateDeployment
                  - opsworks:DescribeApps
                  - opsworks:DescribeCommands
                  - opsworks:DescribeDeployments
                  - opsworks:DescribeInstances
                  - opsworks:DescribeStacks
                  - opsworks:UpdateApp
                  - opsworks:UpdateStack                  
                Resource: '*'
                Effect: Allow
              - Action:
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate                  
                Resource: '*'
                Effect: Allow
              - Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuildBatches
                  - codebuild:StartBuildBatch
                Resource: '*'
                Effect: Allow
              - Action:
                  - devicefarm:ListProjects
                  - devicefarm:ListDevicePools
                  - devicefarm:GetRun
                  - devicefarm:GetUpload
                  - devicefarm:CreateUpload
                  - devicefarm:ScheduleRun                  
                Resource: '*'
                Effect: Allow
              - Action:
                  - Servicecatalog:ListProvisioningArtifacts
                  - Servicecatalog:CreateProvisioningArtifact
                  - Servicecatalog:DescribeProvisioningArtifact
                  - Servicecatalog:DeleteProvisioningArtifact
                  - Servicecatalog:UpdateProduct                                
                Resource: '*'
                Effect: Allow
              - Action:
                  - ecr:DescribeImages                            
                Resource: '*'
                Effect: Allow
              - Action:
                  - states:DescribeExecution
                  - states:DescribeStateMachine
                  - states:StartExecution                                             
                Resource: '*'
                Effect: Allow
              - Action:
                  - appconfig:StartDeployment
                  - appconfig:StopDeployment
                  - appconfig:GetDeployment                                                       
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'SNS:Publish'
                Resource: '*'
                Effect: Allow



  # S3Bucket
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${Env}-${Service}-s3-artifactbucket-${AWS::AccountId}
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      BucketEncryption: 
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags: 
        - Key: Name
          Value: !Sub ${Env}-${Service}-s3-artifactbucket-${AWS::AccountId}
        - Key: Service
          Value: !Ref Service


  
  # CloudWatch Event Rule
  AmazonCloudWatchEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${CodeCommitRepository}
          - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${CodeCommitRepositorySettings}
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - master

      Targets:
        - Arn: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}
          RoleArn: !GetAtt CloudwatchEventRole.Arn
          Id: !Sub ${Env}-${Service}-event-rule



  # CodeBuild
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${Env}-${Service}-codebuild-project
      ServiceRole: !Ref CodeBuildServiceRole
      Artifacts:
        Type: CODEPIPELINE
      Source:
        BuildSpec: cicd/buildspec.yml
        Type: CODEPIPELINE
      Environment:
        PrivilegedMode: true
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        Type: LINUX_CONTAINER


  # # CodeBuild-Project, to update batch job within this build, no deploy stage needed.
  # CodeBuildDeployProject:
  #   Type: AWS::CodeBuild::Project
  #   Properties:
  #     Name: !Sub ${Env}-${Service}-codebuild-deploy-project
  #     ServiceRole: !Ref CodeBuildServiceRole
  #     Artifacts:
  #       Type: CODEPIPELINE
  #     Source:
  #       BuildSpec: cicd/buildspec-deploy.yml
  #       Type: CODEPIPELINE
  #     Environment:
  #       PrivilegedMode: true
  #       ComputeType: BUILD_GENERAL1_SMALL
  #       Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
  #       Type: LINUX_CONTAINER



  # CodePipelineのDeployフェーズでsonarqube-ec2.ymlをデプロイするための権限を定義したIAMロール
  PipelineDeployRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${Env}-${Service}-deploy-role
      AssumeRolePolicyDocument: #role ocs-api-master-ocs-v1-deploy-cdp-role
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: cloudformation.amazonaws.com
      Path: /
      Policies:
        - PolicyName: !Sub ${Env}-${Service}-deploy-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - lambda:*
                Resource: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:*
              - Effect: Allow
                Action:
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:GetRole
                  - iam:PassRole
                  - iam:DeleteRolePolicy
                  - iam:PutRolePolicy
                  - iam:GetRolePolicy
                  - iam:AttachRolePolicy
                  - iam:DetachRolePolicy
                  - iam:UpdateAssumeRolePolicyDocument
                  - iam:UpdateAssumeRolePolicy
                  - iam:CreateServiceLinkedRole
                  - iam:DeleteServiceLinkedRole
                Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/*
              - Effect: Allow
                Action: s3:GetObject
                Resource:
                  - !Sub 'arn:aws:s3:::${Env}-${Service}-s3-artifactbucket-${AWS::AccountId}*'
                  - !Sub 'arn:aws:s3:::${Env}-${Service}-s3-artifactbucket-${AWS::AccountId}*/*'
              - Effect: Allow
                Action: cloudformation:*
                Resource:
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/*-stack/*
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/*-stack-changeset/*
                  - !Sub arn:aws:cloudformation:${AWS::Region}:aws:transform/*
              - Effect: Allow
                Action: apigateway:*
                Resource:
                  - !Sub arn:aws:apigateway:${AWS::Region}::/*
              - Effect: Allow
                Action:
                  - codedeploy:GetDeploymentGroup
                  - codedeploy:CreateApplication
                  - codedeploy:CreateDeployment
                  - codedeploy:DeleteDeploymentConfig
                  - codedeploy:RegisterApplicationRevision
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:CreateDeploymentConfig
                  - codedeploy:CreateDeploymentGroup
                  - codedeploy:DeleteDeploymentGroup
                  - codedeploy:GetDeployment
                  - codedeploy:DeleteApplication
                  - codedeploy:UpdateDeploymentGroup
                  - codedeploy:UpdateApplication
                Resource:
                  - !Sub "arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:*/*"
                  - !Sub "arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:application:*"
                  - !Sub "arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:*"
              - Effect: Allow
                Action:
                  - ec2:*
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogGroups
                  - logs:PutRetentionPolicy
                  - logs:DeleteLogGroup
                  - logs:DeleteLogStream
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:log-stream:*
              - Sid: StateMachine
                Effect: Allow
                Action:
                  - states:CreateStateMachine
                  - states:DeleteStateMachine
                  - states:DescribeStateMachine
                  - states:TagResource
                  - states:UpdateStateMachine
                Resource:
                  - "*"
              - Sid: LambdaLayers
                Effect: Allow
                Action:
                  - lambda:PublishLayerVersion
                  - lambda:DeleteLayerVersion
                  - lambda:AddLayerVersionPermission
                  - lambda:RemoveLayerVersionPermission
                  - lambda:GetLayerVersion
                Resource:
                  - "*"
      Tags:
        - Key: "Env"
          Value: !Ref Env
        - Key: "Service"
          Value: !Ref Service



  # ------------------------------------------------------------#
  # CodePipeline 
  # ------------------------------------------------------------#
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      Name: !Sub ${Env}-${Service}-pipeline
      PipelineType: V2
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
        # EncryptionKey:
        #   Id: !GetAtt BatchKmsKey.Arn
        #   Id: !Ref BatchKmsKeyId
        #   Type: KMS
      Stages:
        - Name: Source
          Actions:
            - InputArtifacts: []
              Name: Github
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection
              OutputArtifacts:
                - Name: App01
              Configuration:
                FullRepositoryId: !Ref GitHubRepo
                ConnectionArn: !Ref GithubConnectionArn
                BranchName: !Ref GitHubBranch
                DetectChanges: false
              RunOrder: 1

            # CodeCommitがあった時に必要だったもの          
            # - Name: Settings
            #   ActionTypeId:
            #     Category: Source
            #     Owner: AWS
            #     Version: '1'
            #     Provider: CodeCommit
            #   Configuration:
            #     RepositoryName: !Ref CodeCommitRepositorySettings
            #     PollForSourceChanges: false
            #     BranchName: master
            #   RunOrder: 1
            #   OutputArtifacts:
            #     - Name: App01
            # # - Name: Source
            # #   ActionTypeId:
            # #     Category: Source
            # #     Owner: AWS
            # #     Version: '1'
            # #     Provider: CodeCommit
            # #   Configuration:
            # #     RepositoryName: !Ref CodeCommitRepository
            # #     PollForSourceChanges: false
            # #     BranchName: master
            # #   RunOrder: 1
            # #   OutputArtifacts:
            # #     - Name: App02

        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
                PrimarySource: App01
              RunOrder: 1
              InputArtifacts:
                - Name: App01
              OutputArtifacts:
                - Name: BuildOutput
            # - Name: JobUpdate
            #   ActionTypeId:
            #     Category: Build
            #     Owner: AWS
            #     Version: '1'
            #     Provider: CodeBuild
            #   Configuration:
            #     ProjectName: !Ref CodeBuildDeployProject
            #     PrimarySource: App01
            #   RunOrder: 2
            #   InputArtifacts:
            #     - Name: App01
            #   OutputArtifacts:
            #     - Name: BuildDeployOutput

        - Name: Deploy
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: "1"
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt PipelineDeployRole.Arn
                Capabilities: CAPABILITY_NAMED_IAM
                StackName: !Ref DeployStack
                ChangeSetName: !Sub ${DeployStack}-changeset
                TemplatePath: !Sub BuildOutput::${PackagedTemplateFile}
              InputArtifacts:
                - Name: BuildOutput
              OutputArtifacts: []
              RunOrder: 1
            - Name: Approve
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: "1"
                Provider: Manual
              # Configuration:
              #   NotificationArn: ""
              #   ExternalEntityLink: ""
              #   CustomData: ""
              InputArtifacts: []
              OutputArtifacts: []                
              RunOrder: 2
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: "1"
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Sub ${DeployStack}-changeset
                StackName: !Sub ${DeployStack}
              InputArtifacts: []
              OutputArtifacts: []
              RunOrder: 3

      # https://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-triggers
      Triggers:
        - ProviderType: CodeStarSourceConnection
          GitConfiguration:
            Push:
              - Tags:
                  Excludes:
                    - beta-*
                  Includes:
                    - release*
              - Branches:
                  Excludes:
                    - beta-*
                  Includes:
                    - main
                    - release*
                FilePaths:
                  Includes:
                    - cfn/**
                    - cicd/**
                    - ./**
                  Excludes:
                    - '**/README.md'
                    - '**/LICENSE'
                    - '**/CONTRIBUTING.md'
            PullRequest:
              - Branches:
                  Excludes:
                    - stable-v1-*
                  Includes:
                    - stable-*
                    - release*
                    - main
                FilePaths:
                  Includes:
                    - cfn/**
                    - cicd/**
                    - ./**
                  Excludes:
                    - '**/README.md'
                    - '**/LICENSE'
                    - '**/CONTRIBUTING.md'
                Events:
                  - CLOSED
            SourceActionName: !Ref SourceActionName
